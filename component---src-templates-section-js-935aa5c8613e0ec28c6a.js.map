{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./src/components/layout.module.scss","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/core-js/modules/es6.string.sup.js","webpack:///./node_modules/katex/dist/contrib/mhchem.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/formula.js","webpack:///./src/templates/section.js","webpack:///./node_modules/core-js/modules/es6.string.sub.js","webpack:///./node_modules/core-js/modules/es6.date.to-string.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/core-js/modules/es6.array.last-index-of.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["module","exports","MDXRenderer","require","Layout","render","children","this","props","className","styles","pageContainer","Component","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","createHTML","factory","self","__WEBPACK_EXTERNAL_MODULE__0__","modules","installedModules","__webpack_require__","moduleId","i","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","key","n","object","property","hasOwnProperty","p","s","__webpack_exports__","katex__WEBPACK_IMPORTED_MODULE_0__","katex__WEBPACK_IMPORTED_MODULE_0___default","a","__defineMacro","context","chemParse","consumeArgs","tokens","stateMachine","str","expectedLoc","loc","start","text","texify","go","mhchemParser","input","undefined","lastInput","state","buffer","replace","watchdog","output","machine","stateMachines","transitions","iterateTransitions","matches","patterns","match_","pattern","task","iA","action_","actions","type_","option","concatArray","nextState","revisit","remainder","toContinue","b","Array","isArray","iB","match","splice","substr","findObserveGroups","'","begExcl","begIncl","endIncl","endExcl","beg2Excl","beg2Incl","end2Incl","end2Excl","combine","_match","indexOf","e","endChars","braces","charAt","endMatchBegin","endMatchEnd","_findObserveGroups","match1","substring","group2","matchRet","join","q","rm","text_","p1","p2","ret","k","kind_","color","createTransitions","stateArray","split","concat","patternArray","j","tmp","dType","isAfterD","c1","c2","c3","c4","hyphenFollows","sb","entityFollows","rd","rq","rdt","rqt","color1","color2","trim","md","mq","b5","mrm","reverse","isInner","res","cee","inputi","_go2","_goInner","buf","_getBond","b6","arrow","_getArrow","_getOperator","defined","quot","string","tag","attribute","String","NAME","exec","O","P","test","toLowerCase","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","constructor","source","proxy","configurable","set","it","keys","$trim","loader","enqueue","React","useMDXComponents","mdx","useMDXScope","scope","components","mdxComponents","mdxScope","End","fullScope","values","fn","Chem","chem","block","katex","renderToString","throwOnError","displayMode","dangerouslySetInnerHTML","__html","Section","shortcodes","Link","src","integrity","data","frontmatter","title","body","query","DateProto","Date","$toString","getTime","NaN","default","toIObject","toInteger","toLength","$native","lastIndexOf","NEGATIVE_ZERO","searchElement","index","Math","min","spaces","space","ltrim","rtrim","exporter","KEY","ALIAS","exp","FORCE","TYPE","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","has","cof","toPrimitive","gOPD","$Number","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","first","charCodeAt","code","digits","slice","parseInt","that","valueOf"],"mappings":"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","file":"component---src-templates-section-js-935aa5c8613e0ec28c6a.js","sourcesContent":["module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"layout-module--pageContainer--3j33U\"};","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React, { Component } from \"react\"\nimport styles from \"./layout.module.scss\"\n\nclass Layout extends Component {\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <div className={styles.pageContainer}>\n        { children }\n      </div>\n    )\n  }\n}\n\nexport default Layout","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","'use strict';\n// B.2.3.14 String.prototype.sup()\nrequire('./_string-html')('sup', function (createHTML) {\n  return function sup() {\n    return createHTML(this, 'sup', '', '');\n  };\n});\n","require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"katex\"));else if (typeof define === 'function' && define.amd) define([\"katex\"], factory);else {\n    var a = typeof exports === 'object' ? factory(require(\"katex\")) : factory(root[\"katex\"]);\n\n    for (var i in a) {\n      (typeof exports === 'object' ? exports : root)[i] = a[i];\n    }\n  }\n})(typeof self !== 'undefined' ? self : this, function (__WEBPACK_EXTERNAL_MODULE__0__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 1);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE__0__;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, __webpack_exports__, __webpack_require__) {\n      \"use strict\";\n\n      __webpack_require__.r(__webpack_exports__);\n      /* harmony import */\n\n\n      var katex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n      /* harmony import */\n\n\n      var katex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(katex__WEBPACK_IMPORTED_MODULE_0__);\n      /* eslint-disable */\n\n      /* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n\n      /* vim: set ts=2 et sw=2 tw=80: */\n\n      /*************************************************************\n       *\n       *  KaTeX mhchem.js\n       *\n       *  This file implements a KaTeX version of mhchem version 3.3.0.\n       *  It is adapted from MathJax/extensions/TeX/mhchem.js\n       *  It differs from the MathJax version as follows:\n       *    1. The interface is changed so that it can be called from KaTeX, not MathJax.\n       *    2. \\rlap and \\llap are replaced with \\mathrlap and \\mathllap.\n       *    3. Four lines of code are edited in order to use \\raisebox instead of \\raise.\n       *    4. The reaction arrow code is simplified. All reaction arrows are rendered\n       *       using KaTeX extensible arrows instead of building non-extensible arrows.\n       *    5. \\tripledash vertical alignment is slightly adjusted.\n       *\n       *    This code, as other KaTeX code, is released under the MIT license.\n       * \n       * /*************************************************************\n       *\n       *  MathJax/extensions/TeX/mhchem.js\n       *\n       *  Implements the \\ce command for handling chemical formulas\n       *  from the mhchem LaTeX package.\n       *\n       *  ---------------------------------------------------------------------\n       *\n       *  Copyright (c) 2011-2015 The MathJax Consortium\n       *  Copyright (c) 2015-2018 Martin Hensel\n       *\n       *  Licensed under the Apache License, Version 2.0 (the \"License\");\n       *  you may not use this file except in compliance with the License.\n       *  You may obtain a copy of the License at\n       *\n       *      http://www.apache.org/licenses/LICENSE-2.0\n       *\n       *  Unless required by applicable law or agreed to in writing, software\n       *  distributed under the License is distributed on an \"AS IS\" BASIS,\n       *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       *  See the License for the specific language governing permissions and\n       *  limitations under the License.\n       */\n      //\n      // Coding Style\n      //   - use '' for identifiers that can by minified/uglified\n      //   - use \"\" for strings that need to stay untouched\n      // version: \"3.3.0\" for MathJax and KaTeX\n      // Add \\ce, \\pu, and \\tripledash to the KaTeX macros.\n\n\n      katex__WEBPACK_IMPORTED_MODULE_0___default.a.__defineMacro(\"\\\\ce\", function (context) {\n        return chemParse(context.consumeArgs(1)[0], \"ce\");\n      });\n\n      katex__WEBPACK_IMPORTED_MODULE_0___default.a.__defineMacro(\"\\\\pu\", function (context) {\n        return chemParse(context.consumeArgs(1)[0], \"pu\");\n      }); //  Needed for \\bond for the ~ forms\n      //  Raise by 2.56mu, not 2mu. We're raising a hyphen-minus, U+002D, not \n      //  a mathematical minus, U+2212. So we need that extra 0.56.\n\n\n      katex__WEBPACK_IMPORTED_MODULE_0___default.a.__defineMacro(\"\\\\tripledash\", \"{\\\\vphantom{-}\\\\raisebox{2.56mu}{$\\\\mkern2mu\" + \"\\\\tiny\\\\text{-}\\\\mkern1mu\\\\text{-}\\\\mkern1mu\\\\text{-}\\\\mkern2mu$}}\"); //\n      //  This is the main function for handing the \\ce and \\pu commands.\n      //  It takes the argument to \\ce or \\pu and returns the corresponding TeX string.\n      //\n\n\n      var chemParse = function chemParse(tokens, stateMachine) {\n        // Recreate the argument string from KaTeX's array of tokens.\n        var str = \"\";\n        var expectedLoc = tokens[tokens.length - 1].loc.start;\n\n        for (var i = tokens.length - 1; i >= 0; i--) {\n          if (tokens[i].loc.start > expectedLoc) {\n            // context.consumeArgs has eaten a space.\n            str += \" \";\n            expectedLoc = tokens[i].loc.start;\n          }\n\n          str += tokens[i].text;\n          expectedLoc += tokens[i].text.length;\n        }\n\n        var tex = texify.go(mhchemParser.go(str, stateMachine));\n        return tex;\n      }; //\n      // Core parser for mhchem syntax  (recursive)\n      //\n\n      /** @type {MhchemParser} */\n\n\n      var mhchemParser = {\n        //\n        // Parses mchem \\ce syntax\n        //\n        // Call like\n        //   go(\"H2O\");\n        //\n        go: function go(input, stateMachine) {\n          if (!input) {\n            return [];\n          }\n\n          if (stateMachine === undefined) {\n            stateMachine = 'ce';\n          }\n\n          var state = '0'; //\n          // String buffers for parsing:\n          //\n          // buffer.a == amount\n          // buffer.o == element\n          // buffer.b == left-side superscript\n          // buffer.p == left-side subscript\n          // buffer.q == right-side subscript\n          // buffer.d == right-side superscript\n          //\n          // buffer.r == arrow\n          // buffer.rdt == arrow, script above, type\n          // buffer.rd == arrow, script above, content\n          // buffer.rqt == arrow, script below, type\n          // buffer.rq == arrow, script below, content\n          //\n          // buffer.text_\n          // buffer.rm\n          // etc.\n          //\n          // buffer.parenthesisLevel == int, starting at 0\n          // buffer.sb == bool, space before\n          // buffer.beginsWithBond == bool\n          //\n          // These letters are also used as state names.\n          //\n          // Other states:\n          // 0 == begin of main part (arrow/operator unlikely)\n          // 1 == next entity\n          // 2 == next entity (arrow/operator unlikely)\n          // 3 == next atom\n          // c == macro\n          //\n\n          /** @type {Buffer} */\n\n          var buffer = {};\n          buffer['parenthesisLevel'] = 0;\n          input = input.replace(/\\n/g, \" \");\n          input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, \"-\");\n          input = input.replace(/[\\u2026]/g, \"...\"); //\n          // Looks through mhchemParser.transitions, to execute a matching action\n          // (recursive)\n          //\n\n          var lastInput;\n          var watchdog = 10;\n          /** @type {ParserOutput[]} */\n\n          var output = [];\n\n          while (true) {\n            if (lastInput !== input) {\n              watchdog = 10;\n              lastInput = input;\n            } else {\n              watchdog--;\n            } //\n            // Find actions in transition table\n            //\n\n\n            var machine = mhchemParser.stateMachines[stateMachine];\n            var t = machine.transitions[state] || machine.transitions['*'];\n\n            iterateTransitions: for (var i = 0; i < t.length; i++) {\n              var matches = mhchemParser.patterns.match_(t[i].pattern, input);\n\n              if (matches) {\n                //\n                // Execute actions\n                //\n                var task = t[i].task;\n\n                for (var iA = 0; iA < task.action_.length; iA++) {\n                  var o; //\n                  // Find and execute action\n                  //\n\n                  if (machine.actions[task.action_[iA].type_]) {\n                    o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n                  } else if (mhchemParser.actions[task.action_[iA].type_]) {\n                    o = mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n                  } else {\n                    throw [\"MhchemBugA\", \"mhchem bug A. Please report. (\" + task.action_[iA].type_ + \")\"]; // Trying to use non-existing action\n                  } //\n                  // Add output\n                  //\n\n\n                  mhchemParser.concatArray(output, o);\n                } //\n                // Set next state,\n                // Shorten input,\n                // Continue with next character\n                //   (= apply only one transition per position)\n                //\n\n\n                state = task.nextState || state;\n\n                if (input.length > 0) {\n                  if (!task.revisit) {\n                    input = matches.remainder;\n                  }\n\n                  if (!task.toContinue) {\n                    break iterateTransitions;\n                  }\n                } else {\n                  return output;\n                }\n              }\n            } //\n            // Prevent infinite loop\n            //\n\n\n            if (watchdog <= 0) {\n              throw [\"MhchemBugU\", \"mhchem bug U. Please report.\"]; // Unexpected character\n            }\n          }\n        },\n        concatArray: function concatArray(a, b) {\n          if (b) {\n            if (Array.isArray(b)) {\n              for (var iB = 0; iB < b.length; iB++) {\n                a.push(b[iB]);\n              }\n            } else {\n              a.push(b);\n            }\n          }\n        },\n        patterns: {\n          //\n          // Matching patterns\n          // either regexps or function that return null or {match_:\"a\", remainder:\"bc\"}\n          //\n          patterns: {\n            // property names must not look like integers (\"2\") for correct property traversal order, later on\n            'empty': /^$/,\n            'else': /^./,\n            'else2': /^./,\n            'space': /^\\s/,\n            'space A': /^\\s(?=[A-Z\\\\$])/,\n            'space$': /^\\s$/,\n            'a-z': /^[a-z]/,\n            'x': /^x/,\n            'x$': /^x$/,\n            'i$': /^i$/,\n            'letters': /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n            '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n            'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n            '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n            'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n            'digits': /^[0-9]+/,\n            '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n            '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n            '(-)(9.,9)(e)(99)': function e99(input) {\n              var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\n\n              if (m && m[0]) {\n                return {\n                  match_: m.splice(1),\n                  remainder: input.substr(m[0].length)\n                };\n              }\n\n              return null;\n            },\n            '(-)(9)^(-9)': function _(input) {\n              var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/);\n\n              if (m && m[0]) {\n                return {\n                  match_: m.splice(1),\n                  remainder: input.substr(m[0].length)\n                };\n              }\n\n              return null;\n            },\n            'state of aggregation $': function stateOfAggregation$(input) {\n              // ... or crystal system\n              var a = mhchemParser.patterns.findObserveGroups(input, \"\", /^\\([a-z]{1,3}(?=[\\),])/, \")\", \"\"); // (aq), (aq,$\\infty$), (aq, sat)\n\n              if (a && a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) {\n                return a;\n              } //  AND end of 'phrase'\n\n\n              var m = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/); // OR crystal system ($o$) (\\ca$c$)\n\n              if (m) {\n                return {\n                  match_: m[0],\n                  remainder: input.substr(m[0].length)\n                };\n              }\n\n              return null;\n            },\n            '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\n            '{[(': /^(?:\\\\\\{|\\[|\\()/,\n            ')]}': /^(?:\\)|\\]|\\\\\\})/,\n            ', ': /^[,;]\\s*/,\n            ',': /^[,;]/,\n            '.': /^[.]/,\n            '. ': /^([.\\u22C5\\u00B7\\u2022])\\s*/,\n            '...': /^\\.\\.\\.(?=$|[^.])/,\n            '* ': /^([*])\\s*/,\n            '^{(...)}': function _(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"^{\", \"\", \"\", \"}\");\n            },\n            '^($...$)': function $$(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"^\", \"$\", \"$\", \"\");\n            },\n            '^a': /^\\^([0-9]+|[^\\\\_])/,\n            '^\\\\x{}{}': function x(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true);\n            },\n            '^\\\\x{}': function x(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n            },\n            '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\n            '^(-1)': /^\\^(-?\\d+)/,\n            '\\'': /^'/,\n            '_{(...)}': function _(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"_{\", \"\", \"\", \"}\");\n            },\n            '_($...$)': function _$$(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"_\", \"$\", \"$\", \"\");\n            },\n            '_9': /^_([+\\-]?[0-9]+|[^\\\\])/,\n            '_\\\\x{}{}': function _X(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true);\n            },\n            '_\\\\x{}': function _X(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n            },\n            '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\n            '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n            '{}': /^\\{\\}/,\n            '{...}': function _(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\", \"{\", \"}\", \"\");\n            },\n            '{(...)}': function _(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"{\", \"\", \"\", \"}\");\n            },\n            '$...$': function $$(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n            },\n            '${(...)}$': function $$(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"${\", \"\", \"\", \"}$\");\n            },\n            '$(...)$': function $$(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"$\", \"\", \"\", \"$\");\n            },\n            '=<>': /^[=<>]/,\n            '#': /^[#\\u2261]/,\n            '+': /^\\+/,\n            '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,\n            // -space -, -; -] -/ -$ -state-of-aggregation\n            '-9': /^-(?=[0-9])/,\n            '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n            '-': /^-/,\n            'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n            'operator': /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n            'arrowUpDown': /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n            '\\\\bond{(...)}': function bond(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\bond{\", \"\", \"\", \"}\");\n            },\n            '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n            'CMT': /^[CMT](?=\\[)/,\n            '[(...)]': function _(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"[\", \"\", \"\", \"]\");\n            },\n            '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\n            '\\\\,': /^(?:\\\\[,\\ ;:])/,\n            // \\\\x - but output no space before\n            '\\\\x{}{}': function x(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true);\n            },\n            '\\\\x{}': function x(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\");\n            },\n            '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n            '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n            'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,\n            // only those with numbers in front, because the others will be formatted correctly anyway\n            'others': /^[\\/~|]/,\n            '\\\\frac{(...)}': function frac(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\frac{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n            },\n            '\\\\overset{(...)}': function overset(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\overset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n            },\n            \"\\\\underset{(...)}\": function underset(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\underset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n            },\n            \"\\\\underbrace{(...)}\": function underbrace(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\underbrace{\", \"\", \"\", \"}_\", \"{\", \"\", \"\", \"}\");\n            },\n            '\\\\color{(...)}0': function color0(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\");\n            },\n            '\\\\color{(...)}{(...)}1': function color1(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\");\n            },\n            '\\\\color(...){(...)}2': function color2(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\color\", \"\\\\\", \"\", /^(?=\\{)/, \"{\", \"\", \"\", \"}\");\n            },\n            '\\\\ce{(...)}': function ce(input) {\n              return mhchemParser.patterns.findObserveGroups(input, \"\\\\ce{\", \"\", \"\", \"}\");\n            },\n            'oxidation$': /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n            'd-oxidation$': /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n            // 0 could be oxidation or charge\n            'roman numeral': /^[IVX]+/,\n            '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n            'amount': function amount(input) {\n              var match; // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing\n\n              match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\n\n              if (match) {\n                return {\n                  match_: match[0],\n                  remainder: input.substr(match[0].length)\n                };\n              }\n\n              var a = mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n\n              if (a) {\n                // e.g. $2n-1$, $-$\n                match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\n\n                if (match) {\n                  return {\n                    match_: match[0],\n                    remainder: input.substr(match[0].length)\n                  };\n                }\n              }\n\n              return null;\n            },\n            'amount2': function amount2(input) {\n              return this['amount'](input);\n            },\n            '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n            'formula$': function formula$(input) {\n              if (input.match(/^\\([a-z]+\\)$/)) {\n                return null;\n              } // state of aggregation = no formula\n\n\n              var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\n\n              if (match) {\n                return {\n                  match_: match[0],\n                  remainder: input.substr(match[0].length)\n                };\n              }\n\n              return null;\n            },\n            'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n            '/': /^\\s*(\\/)\\s*/,\n            '//': /^\\s*(\\/\\/)\\s*/,\n            '*': /^\\s*[*.]\\s*/\n          },\n          findObserveGroups: function findObserveGroups(input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\n            /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */\n            var _match = function _match(input, pattern) {\n              if (typeof pattern === \"string\") {\n                if (input.indexOf(pattern) !== 0) {\n                  return null;\n                }\n\n                return pattern;\n              } else {\n                var match = input.match(pattern);\n\n                if (!match) {\n                  return null;\n                }\n\n                return match[0];\n              }\n            };\n            /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */\n\n\n            var _findObserveGroups = function _findObserveGroups(input, i, endChars) {\n              var braces = 0;\n\n              while (i < input.length) {\n                var a = input.charAt(i);\n\n                var match = _match(input.substr(i), endChars);\n\n                if (match !== null && braces === 0) {\n                  return {\n                    endMatchBegin: i,\n                    endMatchEnd: i + match.length\n                  };\n                } else if (a === \"{\") {\n                  braces++;\n                } else if (a === \"}\") {\n                  if (braces === 0) {\n                    throw [\"ExtraCloseMissingOpen\", \"Extra close brace or missing open brace\"];\n                  } else {\n                    braces--;\n                  }\n                }\n\n                i++;\n              }\n\n              if (braces > 0) {\n                return null;\n              }\n\n              return null;\n            };\n\n            var match = _match(input, begExcl);\n\n            if (match === null) {\n              return null;\n            }\n\n            input = input.substr(match.length);\n            match = _match(input, begIncl);\n\n            if (match === null) {\n              return null;\n            }\n\n            var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n\n            if (e === null) {\n              return null;\n            }\n\n            var match1 = input.substring(0, endIncl ? e.endMatchEnd : e.endMatchBegin);\n\n            if (!(beg2Excl || beg2Incl)) {\n              return {\n                match_: match1,\n                remainder: input.substr(e.endMatchEnd)\n              };\n            } else {\n              var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\n\n              if (group2 === null) {\n                return null;\n              }\n              /** @type {string[]} */\n\n\n              var matchRet = [match1, group2.match_];\n              return {\n                match_: combine ? matchRet.join(\"\") : matchRet,\n                remainder: group2.remainder\n              };\n            }\n          },\n          //\n          // Matching function\n          // e.g. match(\"a\", input) will look for the regexp called \"a\" and see if it matches\n          // returns null or {match_:\"a\", remainder:\"bc\"}\n          //\n          match_: function match_(m, input) {\n            var pattern = mhchemParser.patterns.patterns[m];\n\n            if (pattern === undefined) {\n              throw [\"MhchemBugP\", \"mhchem bug P. Please report. (\" + m + \")\"]; // Trying to use non-existing pattern\n            } else if (typeof pattern === \"function\") {\n              return mhchemParser.patterns.patterns[m](input); // cannot use cached var pattern here, because some pattern functions need this===mhchemParser\n            } else {\n              // RegExp\n              var match = input.match(pattern);\n\n              if (match) {\n                var mm;\n\n                if (match[2]) {\n                  mm = [match[1], match[2]];\n                } else if (match[1]) {\n                  mm = match[1];\n                } else {\n                  mm = match[0];\n                }\n\n                return {\n                  match_: mm,\n                  remainder: input.substr(match[0].length)\n                };\n              }\n\n              return null;\n            }\n          }\n        },\n        //\n        // Generic state machine actions\n        //\n        actions: {\n          'a=': function a(buffer, m) {\n            buffer.a = (buffer.a || \"\") + m;\n          },\n          'b=': function b(buffer, m) {\n            buffer.b = (buffer.b || \"\") + m;\n          },\n          'p=': function p(buffer, m) {\n            buffer.p = (buffer.p || \"\") + m;\n          },\n          'o=': function o(buffer, m) {\n            buffer.o = (buffer.o || \"\") + m;\n          },\n          'q=': function q(buffer, m) {\n            buffer.q = (buffer.q || \"\") + m;\n          },\n          'd=': function d(buffer, m) {\n            buffer.d = (buffer.d || \"\") + m;\n          },\n          'rm=': function rm(buffer, m) {\n            buffer.rm = (buffer.rm || \"\") + m;\n          },\n          'text=': function text(buffer, m) {\n            buffer.text_ = (buffer.text_ || \"\") + m;\n          },\n          'insert': function insert(buffer, m, a) {\n            return {\n              type_: a\n            };\n          },\n          'insert+p1': function insertP1(buffer, m, a) {\n            return {\n              type_: a,\n              p1: m\n            };\n          },\n          'insert+p1+p2': function insertP1P2(buffer, m, a) {\n            return {\n              type_: a,\n              p1: m[0],\n              p2: m[1]\n            };\n          },\n          'copy': function copy(buffer, m) {\n            return m;\n          },\n          'rm': function rm(buffer, m) {\n            return {\n              type_: 'rm',\n              p1: m || \"\"\n            };\n          },\n          'text': function text(buffer, m) {\n            return mhchemParser.go(m, 'text');\n          },\n          '{text}': function text(buffer, m) {\n            var ret = [\"{\"];\n            mhchemParser.concatArray(ret, mhchemParser.go(m, 'text'));\n            ret.push(\"}\");\n            return ret;\n          },\n          'tex-math': function texMath(buffer, m) {\n            return mhchemParser.go(m, 'tex-math');\n          },\n          'tex-math tight': function texMathTight(buffer, m) {\n            return mhchemParser.go(m, 'tex-math tight');\n          },\n          'bond': function bond(buffer, m, k) {\n            return {\n              type_: 'bond',\n              kind_: k || m\n            };\n          },\n          'color0-output': function color0Output(buffer, m) {\n            return {\n              type_: 'color0',\n              color: m[0]\n            };\n          },\n          'ce': function ce(buffer, m) {\n            return mhchemParser.go(m);\n          },\n          '1/2': function _(buffer, m) {\n            /** @type {ParserOutput[]} */\n            var ret = [];\n\n            if (m.match(/^[+\\-]/)) {\n              ret.push(m.substr(0, 1));\n              m = m.substr(1);\n            }\n\n            var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n            n[1] = n[1].replace(/\\$/g, \"\");\n            ret.push({\n              type_: 'frac',\n              p1: n[1],\n              p2: n[2]\n            });\n\n            if (n[3]) {\n              n[3] = n[3].replace(/\\$/g, \"\");\n              ret.push({\n                type_: 'tex-math',\n                p1: n[3]\n              });\n            }\n\n            return ret;\n          },\n          '9,9': function _(buffer, m) {\n            return mhchemParser.go(m, '9,9');\n          }\n        },\n        //\n        // createTransitions\n        // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }\n        // with expansion of 'a|b' to 'a' and 'b' (at 2 places)\n        //\n        createTransitions: function createTransitions(o) {\n          var pattern, state;\n          /** @type {string[]} */\n\n          var stateArray;\n          var i; //\n          // 1. Collect all states\n          //\n\n          /** @type {Transitions} */\n\n          var transitions = {};\n\n          for (pattern in o) {\n            for (state in o[pattern]) {\n              stateArray = state.split(\"|\");\n              o[pattern][state].stateArray = stateArray;\n\n              for (i = 0; i < stateArray.length; i++) {\n                transitions[stateArray[i]] = [];\n              }\n            }\n          } //\n          // 2. Fill states\n          //\n\n\n          for (pattern in o) {\n            for (state in o[pattern]) {\n              stateArray = o[pattern][state].stateArray || [];\n\n              for (i = 0; i < stateArray.length; i++) {\n                //\n                // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]\n                // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)\n                //\n\n                /** @type {any} */\n                var p = o[pattern][state];\n\n                if (p.action_) {\n                  p.action_ = [].concat(p.action_);\n\n                  for (var k = 0; k < p.action_.length; k++) {\n                    if (typeof p.action_[k] === \"string\") {\n                      p.action_[k] = {\n                        type_: p.action_[k]\n                      };\n                    }\n                  }\n                } else {\n                  p.action_ = [];\n                } //\n                // 2.b Multi-insert\n                //\n\n\n                var patternArray = pattern.split(\"|\");\n\n                for (var j = 0; j < patternArray.length; j++) {\n                  if (stateArray[i] === '*') {\n                    // insert into all\n                    for (var t in transitions) {\n                      transitions[t].push({\n                        pattern: patternArray[j],\n                        task: p\n                      });\n                    }\n                  } else {\n                    transitions[stateArray[i]].push({\n                      pattern: patternArray[j],\n                      task: p\n                    });\n                  }\n                }\n              }\n            }\n          }\n\n          return transitions;\n        },\n        stateMachines: {}\n      }; //\n      // Definition of state machines\n      //\n\n      mhchemParser.stateMachines = {\n        //\n        // \\ce state machines\n        //\n        //#region ce\n        'ce': {\n          // main parser\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {\n                action_: 'output'\n              }\n            },\n            'else': {\n              '0|1|2': {\n                action_: 'beginsWithBond=false',\n                revisit: true,\n                toContinue: true\n              }\n            },\n            'oxidation$': {\n              '0': {\n                action_: 'oxidation-output'\n              }\n            },\n            'CMT': {\n              'r': {\n                action_: 'rdt=',\n                nextState: 'rt'\n              },\n              'rd': {\n                action_: 'rqt=',\n                nextState: 'rdt'\n              }\n            },\n            'arrowUpDown': {\n              '0|1|2|as': {\n                action_: ['sb=false', 'output', 'operator'],\n                nextState: '1'\n              }\n            },\n            'uprightEntities': {\n              '0|1|2': {\n                action_: ['o=', 'output'],\n                nextState: '1'\n              }\n            },\n            'orbital': {\n              '0|1|2|3': {\n                action_: 'o=',\n                nextState: 'o'\n              }\n            },\n            '->': {\n              '0|1|2|3': {\n                action_: 'r=',\n                nextState: 'r'\n              },\n              'a|as': {\n                action_: ['output', 'r='],\n                nextState: 'r'\n              },\n              '*': {\n                action_: ['output', 'r='],\n                nextState: 'r'\n              }\n            },\n            '+': {\n              'o': {\n                action_: 'd= kv',\n                nextState: 'd'\n              },\n              'd|D': {\n                action_: 'd=',\n                nextState: 'd'\n              },\n              'q': {\n                action_: 'd=',\n                nextState: 'qd'\n              },\n              'qd|qD': {\n                action_: 'd=',\n                nextState: 'qd'\n              },\n              'dq': {\n                action_: ['output', 'd='],\n                nextState: 'd'\n              },\n              '3': {\n                action_: ['sb=false', 'output', 'operator'],\n                nextState: '0'\n              }\n            },\n            'amount': {\n              '0|2': {\n                action_: 'a=',\n                nextState: 'a'\n              }\n            },\n            'pm-operator': {\n              '0|1|2|a|as': {\n                action_: ['sb=false', 'output', {\n                  type_: 'operator',\n                  option: '\\\\pm'\n                }],\n                nextState: '0'\n              }\n            },\n            'operator': {\n              '0|1|2|a|as': {\n                action_: ['sb=false', 'output', 'operator'],\n                nextState: '0'\n              }\n            },\n            '-$': {\n              'o|q': {\n                action_: ['charge or bond', 'output'],\n                nextState: 'qd'\n              },\n              'd': {\n                action_: 'd=',\n                nextState: 'd'\n              },\n              'D': {\n                action_: ['output', {\n                  type_: 'bond',\n                  option: \"-\"\n                }],\n                nextState: '3'\n              },\n              'q': {\n                action_: 'd=',\n                nextState: 'qd'\n              },\n              'qd': {\n                action_: 'd=',\n                nextState: 'qd'\n              },\n              'qD|dq': {\n                action_: ['output', {\n                  type_: 'bond',\n                  option: \"-\"\n                }],\n                nextState: '3'\n              }\n            },\n            '-9': {\n              '3|o': {\n                action_: ['output', {\n                  type_: 'insert',\n                  option: 'hyphen'\n                }],\n                nextState: '3'\n              }\n            },\n            '- orbital overlap': {\n              'o': {\n                action_: ['output', {\n                  type_: 'insert',\n                  option: 'hyphen'\n                }],\n                nextState: '2'\n              },\n              'd': {\n                action_: ['output', {\n                  type_: 'insert',\n                  option: 'hyphen'\n                }],\n                nextState: '2'\n              }\n            },\n            '-': {\n              '0|1|2': {\n                action_: [{\n                  type_: 'output',\n                  option: 1\n                }, 'beginsWithBond=true', {\n                  type_: 'bond',\n                  option: \"-\"\n                }],\n                nextState: '3'\n              },\n              '3': {\n                action_: {\n                  type_: 'bond',\n                  option: \"-\"\n                }\n              },\n              'a': {\n                action_: ['output', {\n                  type_: 'insert',\n                  option: 'hyphen'\n                }],\n                nextState: '2'\n              },\n              'as': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, {\n                  type_: 'bond',\n                  option: \"-\"\n                }],\n                nextState: '3'\n              },\n              'b': {\n                action_: 'b='\n              },\n              'o': {\n                action_: {\n                  type_: '- after o/d',\n                  option: false\n                },\n                nextState: '2'\n              },\n              'q': {\n                action_: {\n                  type_: '- after o/d',\n                  option: false\n                },\n                nextState: '2'\n              },\n              'd|qd|dq': {\n                action_: {\n                  type_: '- after o/d',\n                  option: true\n                },\n                nextState: '2'\n              },\n              'D|qD|p': {\n                action_: ['output', {\n                  type_: 'bond',\n                  option: \"-\"\n                }],\n                nextState: '3'\n              }\n            },\n            'amount2': {\n              '1|3': {\n                action_: 'a=',\n                nextState: 'a'\n              }\n            },\n            'letters': {\n              '0|1|2|3|a|as|b|p|bp|o': {\n                action_: 'o=',\n                nextState: 'o'\n              },\n              'q|dq': {\n                action_: ['output', 'o='],\n                nextState: 'o'\n              },\n              'd|D|qd|qD': {\n                action_: 'o after d',\n                nextState: 'o'\n              }\n            },\n            'digits': {\n              'o': {\n                action_: 'q=',\n                nextState: 'q'\n              },\n              'd|D': {\n                action_: 'q=',\n                nextState: 'dq'\n              },\n              'q': {\n                action_: ['output', 'o='],\n                nextState: 'o'\n              },\n              'a': {\n                action_: 'o=',\n                nextState: 'o'\n              }\n            },\n            'space A': {\n              'b|p|bp': {}\n            },\n            'space': {\n              'a': {\n                nextState: 'as'\n              },\n              '0': {\n                action_: 'sb=false'\n              },\n              '1|2': {\n                action_: 'sb=true'\n              },\n              'r|rt|rd|rdt|rdq': {\n                action_: 'output',\n                nextState: '0'\n              },\n              '*': {\n                action_: ['output', 'sb=true'],\n                nextState: '1'\n              }\n            },\n            '1st-level escape': {\n              '1|2': {\n                action_: ['output', {\n                  type_: 'insert+p1',\n                  option: '1st-level escape'\n                }]\n              },\n              '*': {\n                action_: ['output', {\n                  type_: 'insert+p1',\n                  option: '1st-level escape'\n                }],\n                nextState: '0'\n              }\n            },\n            '[(...)]': {\n              'r|rt': {\n                action_: 'rd=',\n                nextState: 'rd'\n              },\n              'rd|rdt': {\n                action_: 'rq=',\n                nextState: 'rdq'\n              }\n            },\n            '...': {\n              'o|d|D|dq|qd|qD': {\n                action_: ['output', {\n                  type_: 'bond',\n                  option: \"...\"\n                }],\n                nextState: '3'\n              },\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 1\n                }, {\n                  type_: 'insert',\n                  option: 'ellipsis'\n                }],\n                nextState: '1'\n              }\n            },\n            '. |* ': {\n              '*': {\n                action_: ['output', {\n                  type_: 'insert',\n                  option: 'addition compound'\n                }],\n                nextState: '1'\n              }\n            },\n            'state of aggregation $': {\n              '*': {\n                action_: ['output', 'state of aggregation'],\n                nextState: '1'\n              }\n            },\n            '{[(': {\n              'a|as|o': {\n                action_: ['o=', 'output', 'parenthesisLevel++'],\n                nextState: '2'\n              },\n              '0|1|2|3': {\n                action_: ['o=', 'output', 'parenthesisLevel++'],\n                nextState: '2'\n              },\n              '*': {\n                action_: ['output', 'o=', 'output', 'parenthesisLevel++'],\n                nextState: '2'\n              }\n            },\n            ')]}': {\n              '0|1|2|3|b|p|bp|o': {\n                action_: ['o=', 'parenthesisLevel--'],\n                nextState: 'o'\n              },\n              'a|as|d|D|q|qd|qD|dq': {\n                action_: ['output', 'o=', 'parenthesisLevel--'],\n                nextState: 'o'\n              }\n            },\n            ', ': {\n              '*': {\n                action_: ['output', 'comma'],\n                nextState: '0'\n              }\n            },\n            '^_': {\n              // ^ and _ without a sensible argument\n              '*': {}\n            },\n            '^{(...)}|^($...$)': {\n              '0|1|2|as': {\n                action_: 'b=',\n                nextState: 'b'\n              },\n              'p': {\n                action_: 'b=',\n                nextState: 'bp'\n              },\n              '3|o': {\n                action_: 'd= kv',\n                nextState: 'D'\n              },\n              'q': {\n                action_: 'd=',\n                nextState: 'qD'\n              },\n              'd|D|qd|qD|dq': {\n                action_: ['output', 'd='],\n                nextState: 'D'\n              }\n            },\n            '^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|\\'': {\n              '0|1|2|as': {\n                action_: 'b=',\n                nextState: 'b'\n              },\n              'p': {\n                action_: 'b=',\n                nextState: 'bp'\n              },\n              '3|o': {\n                action_: 'd= kv',\n                nextState: 'd'\n              },\n              'q': {\n                action_: 'd=',\n                nextState: 'qd'\n              },\n              'd|qd|D|qD': {\n                action_: 'd='\n              },\n              'dq': {\n                action_: ['output', 'd='],\n                nextState: 'd'\n              }\n            },\n            '_{(state of aggregation)}$': {\n              'd|D|q|qd|qD|dq': {\n                action_: ['output', 'q='],\n                nextState: 'q'\n              }\n            },\n            '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\n              '0|1|2|as': {\n                action_: 'p=',\n                nextState: 'p'\n              },\n              'b': {\n                action_: 'p=',\n                nextState: 'bp'\n              },\n              '3|o': {\n                action_: 'q=',\n                nextState: 'q'\n              },\n              'd|D': {\n                action_: 'q=',\n                nextState: 'dq'\n              },\n              'q|qd|qD|dq': {\n                action_: ['output', 'q='],\n                nextState: 'q'\n              }\n            },\n            '=<>': {\n              '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'bond'],\n                nextState: '3'\n              }\n            },\n            '#': {\n              '0|1|2|3|a|as|o': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, {\n                  type_: 'bond',\n                  option: \"#\"\n                }],\n                nextState: '3'\n              }\n            },\n            '{}': {\n              '*': {\n                action_: {\n                  type_: 'output',\n                  option: 1\n                },\n                nextState: '1'\n              }\n            },\n            '{...}': {\n              '0|1|2|3|a|as|b|p|bp': {\n                action_: 'o=',\n                nextState: 'o'\n              },\n              'o|d|D|q|qd|qD|dq': {\n                action_: ['output', 'o='],\n                nextState: 'o'\n              }\n            },\n            '$...$': {\n              'a': {\n                action_: 'a='\n              },\n              // 2$n$\n              '0|1|2|3|as|b|p|bp|o': {\n                action_: 'o=',\n                nextState: 'o'\n              },\n              // not 'amount'\n              'as|o': {\n                action_: 'o='\n              },\n              'q|d|D|qd|qD|dq': {\n                action_: ['output', 'o='],\n                nextState: 'o'\n              }\n            },\n            '\\\\bond{(...)}': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'bond'],\n                nextState: \"3\"\n              }\n            },\n            '\\\\frac{(...)}': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 1\n                }, 'frac-output'],\n                nextState: '3'\n              }\n            },\n            '\\\\overset{(...)}': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'overset-output'],\n                nextState: '3'\n              }\n            },\n            \"\\\\underset{(...)}\": {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'underset-output'],\n                nextState: '3'\n              }\n            },\n            \"\\\\underbrace{(...)}\": {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'underbrace-output'],\n                nextState: '3'\n              }\n            },\n            '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'color-output'],\n                nextState: '3'\n              }\n            },\n            '\\\\color{(...)}0': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'color0-output']\n              }\n            },\n            '\\\\ce{(...)}': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 2\n                }, 'ce'],\n                nextState: '3'\n              }\n            },\n            '\\\\,': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 1\n                }, 'copy'],\n                nextState: '1'\n              }\n            },\n            '\\\\x{}{}|\\\\x{}|\\\\x': {\n              '0|1|2|3|a|as|b|p|bp|o|c0': {\n                action_: ['o=', 'output'],\n                nextState: '3'\n              },\n              '*': {\n                action_: ['output', 'o=', 'output'],\n                nextState: '3'\n              }\n            },\n            'others': {\n              '*': {\n                action_: [{\n                  type_: 'output',\n                  option: 1\n                }, 'copy'],\n                nextState: '3'\n              }\n            },\n            'else2': {\n              'a': {\n                action_: 'a to o',\n                nextState: 'o',\n                revisit: true\n              },\n              'as': {\n                action_: ['output', 'sb=true'],\n                nextState: '1',\n                revisit: true\n              },\n              'r|rt|rd|rdt|rdq': {\n                action_: ['output'],\n                nextState: '0',\n                revisit: true\n              },\n              '*': {\n                action_: ['output', 'copy'],\n                nextState: '3'\n              }\n            }\n          }),\n          actions: {\n            'o after d': function oAfterD(buffer, m) {\n              var ret;\n\n              if ((buffer.d || \"\").match(/^[0-9]+$/)) {\n                var tmp = buffer.d;\n                buffer.d = undefined;\n                ret = this['output'](buffer);\n                buffer.b = tmp;\n              } else {\n                ret = this['output'](buffer);\n              }\n\n              mhchemParser.actions['o='](buffer, m);\n              return ret;\n            },\n            'd= kv': function dKv(buffer, m) {\n              buffer.d = m;\n              buffer.dType = 'kv';\n            },\n            'charge or bond': function chargeOrBond(buffer, m) {\n              if (buffer['beginsWithBond']) {\n                /** @type {ParserOutput[]} */\n                var ret = [];\n                mhchemParser.concatArray(ret, this['output'](buffer));\n                mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n                return ret;\n              } else {\n                buffer.d = m;\n              }\n            },\n            '- after o/d': function afterOD(buffer, m, isAfterD) {\n              var c1 = mhchemParser.patterns.match_('orbital', buffer.o || \"\");\n              var c2 = mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || \"\");\n              var c3 = mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || \"\");\n              var c4 = mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || \"\");\n              var hyphenFollows = m === \"-\" && (c1 && c1.remainder === \"\" || c2 || c3 || c4);\n\n              if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {\n                buffer.o = '$' + buffer.o + '$';\n              }\n              /** @type {ParserOutput[]} */\n\n\n              var ret = [];\n\n              if (hyphenFollows) {\n                mhchemParser.concatArray(ret, this['output'](buffer));\n                ret.push({\n                  type_: 'hyphen'\n                });\n              } else {\n                c1 = mhchemParser.patterns.match_('digits', buffer.d || \"\");\n\n                if (isAfterD && c1 && c1.remainder === '') {\n                  mhchemParser.concatArray(ret, mhchemParser.actions['d='](buffer, m));\n                  mhchemParser.concatArray(ret, this['output'](buffer));\n                } else {\n                  mhchemParser.concatArray(ret, this['output'](buffer));\n                  mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n                }\n              }\n\n              return ret;\n            },\n            'a to o': function aToO(buffer) {\n              buffer.o = buffer.a;\n              buffer.a = undefined;\n            },\n            'sb=true': function sbTrue(buffer) {\n              buffer.sb = true;\n            },\n            'sb=false': function sbFalse(buffer) {\n              buffer.sb = false;\n            },\n            'beginsWithBond=true': function beginsWithBondTrue(buffer) {\n              buffer['beginsWithBond'] = true;\n            },\n            'beginsWithBond=false': function beginsWithBondFalse(buffer) {\n              buffer['beginsWithBond'] = false;\n            },\n            'parenthesisLevel++': function parenthesisLevel(buffer) {\n              buffer['parenthesisLevel']++;\n            },\n            'parenthesisLevel--': function parenthesisLevel(buffer) {\n              buffer['parenthesisLevel']--;\n            },\n            'state of aggregation': function stateOfAggregation(buffer, m) {\n              return {\n                type_: 'state of aggregation',\n                p1: mhchemParser.go(m, 'o')\n              };\n            },\n            'comma': function comma(buffer, m) {\n              var a = m.replace(/\\s*$/, '');\n              var withSpace = a !== m;\n\n              if (withSpace && buffer['parenthesisLevel'] === 0) {\n                return {\n                  type_: 'comma enumeration L',\n                  p1: a\n                };\n              } else {\n                return {\n                  type_: 'comma enumeration M',\n                  p1: a\n                };\n              }\n            },\n            'output': function output(buffer, m, entityFollows) {\n              // entityFollows:\n              //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)\n              //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)\n              //   2 = 1 + the entity can have an amount, so output a\\, instead of converting it to o (can only apply to states a|as)\n\n              /** @type {ParserOutput | ParserOutput[]} */\n              var ret;\n\n              if (!buffer.r) {\n                ret = [];\n\n                if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {//ret = [];\n                } else {\n                  if (buffer.sb) {\n                    ret.push({\n                      type_: 'entitySkip'\n                    });\n                  }\n\n                  if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows !== 2) {\n                    buffer.o = buffer.a;\n                    buffer.a = undefined;\n                  } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n                    buffer.o = buffer.a;\n                    buffer.d = buffer.b;\n                    buffer.q = buffer.p;\n                    buffer.a = buffer.b = buffer.p = undefined;\n                  } else {\n                    if (buffer.o && buffer.dType === 'kv' && mhchemParser.patterns.match_('d-oxidation$', buffer.d || \"\")) {\n                      buffer.dType = 'oxidation';\n                    } else if (buffer.o && buffer.dType === 'kv' && !buffer.q) {\n                      buffer.dType = undefined;\n                    }\n                  }\n\n                  ret.push({\n                    type_: 'chemfive',\n                    a: mhchemParser.go(buffer.a, 'a'),\n                    b: mhchemParser.go(buffer.b, 'bd'),\n                    p: mhchemParser.go(buffer.p, 'pq'),\n                    o: mhchemParser.go(buffer.o, 'o'),\n                    q: mhchemParser.go(buffer.q, 'pq'),\n                    d: mhchemParser.go(buffer.d, buffer.dType === 'oxidation' ? 'oxidation' : 'bd'),\n                    dType: buffer.dType\n                  });\n                }\n              } else {\n                // r\n\n                /** @type {ParserOutput[]} */\n                var rd;\n\n                if (buffer.rdt === 'M') {\n                  rd = mhchemParser.go(buffer.rd, 'tex-math');\n                } else if (buffer.rdt === 'T') {\n                  rd = [{\n                    type_: 'text',\n                    p1: buffer.rd || \"\"\n                  }];\n                } else {\n                  rd = mhchemParser.go(buffer.rd);\n                }\n                /** @type {ParserOutput[]} */\n\n\n                var rq;\n\n                if (buffer.rqt === 'M') {\n                  rq = mhchemParser.go(buffer.rq, 'tex-math');\n                } else if (buffer.rqt === 'T') {\n                  rq = [{\n                    type_: 'text',\n                    p1: buffer.rq || \"\"\n                  }];\n                } else {\n                  rq = mhchemParser.go(buffer.rq);\n                }\n\n                ret = {\n                  type_: 'arrow',\n                  r: buffer.r,\n                  rd: rd,\n                  rq: rq\n                };\n              }\n\n              for (var p in buffer) {\n                if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {\n                  delete buffer[p];\n                }\n              }\n\n              return ret;\n            },\n            'oxidation-output': function oxidationOutput(buffer, m) {\n              var ret = [\"{\"];\n              mhchemParser.concatArray(ret, mhchemParser.go(m, 'oxidation'));\n              ret.push(\"}\");\n              return ret;\n            },\n            'frac-output': function fracOutput(buffer, m) {\n              return {\n                type_: 'frac-ce',\n                p1: mhchemParser.go(m[0]),\n                p2: mhchemParser.go(m[1])\n              };\n            },\n            'overset-output': function oversetOutput(buffer, m) {\n              return {\n                type_: 'overset',\n                p1: mhchemParser.go(m[0]),\n                p2: mhchemParser.go(m[1])\n              };\n            },\n            'underset-output': function undersetOutput(buffer, m) {\n              return {\n                type_: 'underset',\n                p1: mhchemParser.go(m[0]),\n                p2: mhchemParser.go(m[1])\n              };\n            },\n            'underbrace-output': function underbraceOutput(buffer, m) {\n              return {\n                type_: 'underbrace',\n                p1: mhchemParser.go(m[0]),\n                p2: mhchemParser.go(m[1])\n              };\n            },\n            'color-output': function colorOutput(buffer, m) {\n              return {\n                type_: 'color',\n                color1: m[0],\n                color2: mhchemParser.go(m[1])\n              };\n            },\n            'r=': function r(buffer, m) {\n              buffer.r = m;\n            },\n            'rdt=': function rdt(buffer, m) {\n              buffer.rdt = m;\n            },\n            'rd=': function rd(buffer, m) {\n              buffer.rd = m;\n            },\n            'rqt=': function rqt(buffer, m) {\n              buffer.rqt = m;\n            },\n            'rq=': function rq(buffer, m) {\n              buffer.rq = m;\n            },\n            'operator': function operator(buffer, m, p1) {\n              return {\n                type_: 'operator',\n                kind_: p1 || m\n              };\n            }\n          }\n        },\n        'a': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {}\n            },\n            '1/2$': {\n              '0': {\n                action_: '1/2'\n              }\n            },\n            'else': {\n              '0': {\n                nextState: '1',\n                revisit: true\n              }\n            },\n            '$(...)$': {\n              '*': {\n                action_: 'tex-math tight',\n                nextState: '1'\n              }\n            },\n            ',': {\n              '*': {\n                action_: {\n                  type_: 'insert',\n                  option: 'commaDecimal'\n                }\n              }\n            },\n            'else2': {\n              '*': {\n                action_: 'copy'\n              }\n            }\n          }),\n          actions: {}\n        },\n        'o': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {}\n            },\n            '1/2$': {\n              '0': {\n                action_: '1/2'\n              }\n            },\n            'else': {\n              '0': {\n                nextState: '1',\n                revisit: true\n              }\n            },\n            'letters': {\n              '*': {\n                action_: 'rm'\n              }\n            },\n            '\\\\ca': {\n              '*': {\n                action_: {\n                  type_: 'insert',\n                  option: 'circa'\n                }\n              }\n            },\n            '\\\\x{}{}|\\\\x{}|\\\\x': {\n              '*': {\n                action_: 'copy'\n              }\n            },\n            '${(...)}$|$(...)$': {\n              '*': {\n                action_: 'tex-math'\n              }\n            },\n            '{(...)}': {\n              '*': {\n                action_: '{text}'\n              }\n            },\n            'else2': {\n              '*': {\n                action_: 'copy'\n              }\n            }\n          }),\n          actions: {}\n        },\n        'text': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {\n                action_: 'output'\n              }\n            },\n            '{...}': {\n              '*': {\n                action_: 'text='\n              }\n            },\n            '${(...)}$|$(...)$': {\n              '*': {\n                action_: 'tex-math'\n              }\n            },\n            '\\\\greek': {\n              '*': {\n                action_: ['output', 'rm']\n              }\n            },\n            '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n              '*': {\n                action_: ['output', 'copy']\n              }\n            },\n            'else': {\n              '*': {\n                action_: 'text='\n              }\n            }\n          }),\n          actions: {\n            'output': function output(buffer) {\n              if (buffer.text_) {\n                /** @type {ParserOutput} */\n                var ret = {\n                  type_: 'text',\n                  p1: buffer.text_\n                };\n\n                for (var p in buffer) {\n                  delete buffer[p];\n                }\n\n                return ret;\n              }\n            }\n          }\n        },\n        'pq': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {}\n            },\n            'state of aggregation $': {\n              '*': {\n                action_: 'state of aggregation'\n              }\n            },\n            'i$': {\n              '0': {\n                nextState: '!f',\n                revisit: true\n              }\n            },\n            '(KV letters),': {\n              '0': {\n                action_: 'rm',\n                nextState: '0'\n              }\n            },\n            'formula$': {\n              '0': {\n                nextState: 'f',\n                revisit: true\n              }\n            },\n            '1/2$': {\n              '0': {\n                action_: '1/2'\n              }\n            },\n            'else': {\n              '0': {\n                nextState: '!f',\n                revisit: true\n              }\n            },\n            '${(...)}$|$(...)$': {\n              '*': {\n                action_: 'tex-math'\n              }\n            },\n            '{(...)}': {\n              '*': {\n                action_: 'text'\n              }\n            },\n            'a-z': {\n              'f': {\n                action_: 'tex-math'\n              }\n            },\n            'letters': {\n              '*': {\n                action_: 'rm'\n              }\n            },\n            '-9.,9': {\n              '*': {\n                action_: '9,9'\n              }\n            },\n            ',': {\n              '*': {\n                action_: {\n                  type_: 'insert+p1',\n                  option: 'comma enumeration S'\n                }\n              }\n            },\n            '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n              '*': {\n                action_: 'color-output'\n              }\n            },\n            '\\\\color{(...)}0': {\n              '*': {\n                action_: 'color0-output'\n              }\n            },\n            '\\\\ce{(...)}': {\n              '*': {\n                action_: 'ce'\n              }\n            },\n            '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n              '*': {\n                action_: 'copy'\n              }\n            },\n            'else2': {\n              '*': {\n                action_: 'copy'\n              }\n            }\n          }),\n          actions: {\n            'state of aggregation': function stateOfAggregation(buffer, m) {\n              return {\n                type_: 'state of aggregation subscript',\n                p1: mhchemParser.go(m, 'o')\n              };\n            },\n            'color-output': function colorOutput(buffer, m) {\n              return {\n                type_: 'color',\n                color1: m[0],\n                color2: mhchemParser.go(m[1], 'pq')\n              };\n            }\n          }\n        },\n        'bd': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {}\n            },\n            'x$': {\n              '0': {\n                nextState: '!f',\n                revisit: true\n              }\n            },\n            'formula$': {\n              '0': {\n                nextState: 'f',\n                revisit: true\n              }\n            },\n            'else': {\n              '0': {\n                nextState: '!f',\n                revisit: true\n              }\n            },\n            '-9.,9 no missing 0': {\n              '*': {\n                action_: '9,9'\n              }\n            },\n            '.': {\n              '*': {\n                action_: {\n                  type_: 'insert',\n                  option: 'electron dot'\n                }\n              }\n            },\n            'a-z': {\n              'f': {\n                action_: 'tex-math'\n              }\n            },\n            'x': {\n              '*': {\n                action_: {\n                  type_: 'insert',\n                  option: 'KV x'\n                }\n              }\n            },\n            'letters': {\n              '*': {\n                action_: 'rm'\n              }\n            },\n            '\\'': {\n              '*': {\n                action_: {\n                  type_: 'insert',\n                  option: 'prime'\n                }\n              }\n            },\n            '${(...)}$|$(...)$': {\n              '*': {\n                action_: 'tex-math'\n              }\n            },\n            '{(...)}': {\n              '*': {\n                action_: 'text'\n              }\n            },\n            '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n              '*': {\n                action_: 'color-output'\n              }\n            },\n            '\\\\color{(...)}0': {\n              '*': {\n                action_: 'color0-output'\n              }\n            },\n            '\\\\ce{(...)}': {\n              '*': {\n                action_: 'ce'\n              }\n            },\n            '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n              '*': {\n                action_: 'copy'\n              }\n            },\n            'else2': {\n              '*': {\n                action_: 'copy'\n              }\n            }\n          }),\n          actions: {\n            'color-output': function colorOutput(buffer, m) {\n              return {\n                type_: 'color',\n                color1: m[0],\n                color2: mhchemParser.go(m[1], 'bd')\n              };\n            }\n          }\n        },\n        'oxidation': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {}\n            },\n            'roman numeral': {\n              '*': {\n                action_: 'roman-numeral'\n              }\n            },\n            '${(...)}$|$(...)$': {\n              '*': {\n                action_: 'tex-math'\n              }\n            },\n            'else': {\n              '*': {\n                action_: 'copy'\n              }\n            }\n          }),\n          actions: {\n            'roman-numeral': function romanNumeral(buffer, m) {\n              return {\n                type_: 'roman numeral',\n                p1: m || \"\"\n              };\n            }\n          }\n        },\n        'tex-math': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {\n                action_: 'output'\n              }\n            },\n            '\\\\ce{(...)}': {\n              '*': {\n                action_: ['output', 'ce']\n              }\n            },\n            '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n              '*': {\n                action_: 'o='\n              }\n            },\n            'else': {\n              '*': {\n                action_: 'o='\n              }\n            }\n          }),\n          actions: {\n            'output': function output(buffer) {\n              if (buffer.o) {\n                /** @type {ParserOutput} */\n                var ret = {\n                  type_: 'tex-math',\n                  p1: buffer.o\n                };\n\n                for (var p in buffer) {\n                  delete buffer[p];\n                }\n\n                return ret;\n              }\n            }\n          }\n        },\n        'tex-math tight': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {\n                action_: 'output'\n              }\n            },\n            '\\\\ce{(...)}': {\n              '*': {\n                action_: ['output', 'ce']\n              }\n            },\n            '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n              '*': {\n                action_: 'o='\n              }\n            },\n            '-|+': {\n              '*': {\n                action_: 'tight operator'\n              }\n            },\n            'else': {\n              '*': {\n                action_: 'o='\n              }\n            }\n          }),\n          actions: {\n            'tight operator': function tightOperator(buffer, m) {\n              buffer.o = (buffer.o || \"\") + \"{\" + m + \"}\";\n            },\n            'output': function output(buffer) {\n              if (buffer.o) {\n                /** @type {ParserOutput} */\n                var ret = {\n                  type_: 'tex-math',\n                  p1: buffer.o\n                };\n\n                for (var p in buffer) {\n                  delete buffer[p];\n                }\n\n                return ret;\n              }\n            }\n          }\n        },\n        '9,9': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {}\n            },\n            ',': {\n              '*': {\n                action_: 'comma'\n              }\n            },\n            'else': {\n              '*': {\n                action_: 'copy'\n              }\n            }\n          }),\n          actions: {\n            'comma': function comma() {\n              return {\n                type_: 'commaDecimal'\n              };\n            }\n          }\n        },\n        //#endregion\n        //\n        // \\pu state machines\n        //\n        //#region pu\n        'pu': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {\n                action_: 'output'\n              }\n            },\n            'space$': {\n              '*': {\n                action_: ['output', 'space']\n              }\n            },\n            '{[(|)]}': {\n              '0|a': {\n                action_: 'copy'\n              }\n            },\n            '(-)(9)^(-9)': {\n              '0': {\n                action_: 'number^',\n                nextState: 'a'\n              }\n            },\n            '(-)(9.,9)(e)(99)': {\n              '0': {\n                action_: 'enumber',\n                nextState: 'a'\n              }\n            },\n            'space': {\n              '0|a': {}\n            },\n            'pm-operator': {\n              '0|a': {\n                action_: {\n                  type_: 'operator',\n                  option: '\\\\pm'\n                },\n                nextState: '0'\n              }\n            },\n            'operator': {\n              '0|a': {\n                action_: 'copy',\n                nextState: '0'\n              }\n            },\n            '//': {\n              'd': {\n                action_: 'o=',\n                nextState: '/'\n              }\n            },\n            '/': {\n              'd': {\n                action_: 'o=',\n                nextState: '/'\n              }\n            },\n            '{...}|else': {\n              '0|d': {\n                action_: 'd=',\n                nextState: 'd'\n              },\n              'a': {\n                action_: ['space', 'd='],\n                nextState: 'd'\n              },\n              '/|q': {\n                action_: 'q=',\n                nextState: 'q'\n              }\n            }\n          }),\n          actions: {\n            'enumber': function enumber(buffer, m) {\n              /** @type {ParserOutput[]} */\n              var ret = [];\n\n              if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                ret.push(\"\\\\pm \");\n              } else if (m[0]) {\n                ret.push(m[0]);\n              }\n\n              if (m[1]) {\n                mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n\n                if (m[2]) {\n                  if (m[2].match(/[,.]/)) {\n                    mhchemParser.concatArray(ret, mhchemParser.go(m[2], 'pu-9,9'));\n                  } else {\n                    ret.push(m[2]);\n                  }\n                }\n\n                m[3] = m[4] || m[3];\n\n                if (m[3]) {\n                  m[3] = m[3].trim();\n\n                  if (m[3] === \"e\" || m[3].substr(0, 1) === \"*\") {\n                    ret.push({\n                      type_: 'cdot'\n                    });\n                  } else {\n                    ret.push({\n                      type_: 'times'\n                    });\n                  }\n                }\n              }\n\n              if (m[3]) {\n                ret.push(\"10^{\" + m[5] + \"}\");\n              }\n\n              return ret;\n            },\n            'number^': function number(buffer, m) {\n              /** @type {ParserOutput[]} */\n              var ret = [];\n\n              if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                ret.push(\"\\\\pm \");\n              } else if (m[0]) {\n                ret.push(m[0]);\n              }\n\n              mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n              ret.push(\"^{\" + m[2] + \"}\");\n              return ret;\n            },\n            'operator': function operator(buffer, m, p1) {\n              return {\n                type_: 'operator',\n                kind_: p1 || m\n              };\n            },\n            'space': function space() {\n              return {\n                type_: 'pu-space-1'\n              };\n            },\n            'output': function output(buffer) {\n              /** @type {ParserOutput | ParserOutput[]} */\n              var ret;\n              var md = mhchemParser.patterns.match_('{(...)}', buffer.d || \"\");\n\n              if (md && md.remainder === '') {\n                buffer.d = md.match_;\n              }\n\n              var mq = mhchemParser.patterns.match_('{(...)}', buffer.q || \"\");\n\n              if (mq && mq.remainder === '') {\n                buffer.q = mq.match_;\n              }\n\n              if (buffer.d) {\n                buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n              }\n\n              if (buffer.q) {\n                // fraction\n                buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n                var b5 = {\n                  d: mhchemParser.go(buffer.d, 'pu'),\n                  q: mhchemParser.go(buffer.q, 'pu')\n                };\n\n                if (buffer.o === '//') {\n                  ret = {\n                    type_: 'pu-frac',\n                    p1: b5.d,\n                    p2: b5.q\n                  };\n                } else {\n                  ret = b5.d;\n\n                  if (b5.d.length > 1 || b5.q.length > 1) {\n                    ret.push({\n                      type_: ' / '\n                    });\n                  } else {\n                    ret.push({\n                      type_: '/'\n                    });\n                  }\n\n                  mhchemParser.concatArray(ret, b5.q);\n                }\n              } else {\n                // no fraction\n                ret = mhchemParser.go(buffer.d, 'pu-2');\n              }\n\n              for (var p in buffer) {\n                delete buffer[p];\n              }\n\n              return ret;\n            }\n          }\n        },\n        'pu-2': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '*': {\n                action_: 'output'\n              }\n            },\n            '*': {\n              '*': {\n                action_: ['output', 'cdot'],\n                nextState: '0'\n              }\n            },\n            '\\\\x': {\n              '*': {\n                action_: 'rm='\n              }\n            },\n            'space': {\n              '*': {\n                action_: ['output', 'space'],\n                nextState: '0'\n              }\n            },\n            '^{(...)}|^(-1)': {\n              '1': {\n                action_: '^(-1)'\n              }\n            },\n            '-9.,9': {\n              '0': {\n                action_: 'rm=',\n                nextState: '0'\n              },\n              '1': {\n                action_: '^(-1)',\n                nextState: '0'\n              }\n            },\n            '{...}|else': {\n              '*': {\n                action_: 'rm=',\n                nextState: '1'\n              }\n            }\n          }),\n          actions: {\n            'cdot': function cdot() {\n              return {\n                type_: 'tight cdot'\n              };\n            },\n            '^(-1)': function _(buffer, m) {\n              buffer.rm += \"^{\" + m + \"}\";\n            },\n            'space': function space() {\n              return {\n                type_: 'pu-space-2'\n              };\n            },\n            'output': function output(buffer) {\n              /** @type {ParserOutput | ParserOutput[]} */\n              var ret = [];\n\n              if (buffer.rm) {\n                var mrm = mhchemParser.patterns.match_('{(...)}', buffer.rm || \"\");\n\n                if (mrm && mrm.remainder === '') {\n                  ret = mhchemParser.go(mrm.match_, 'pu');\n                } else {\n                  ret = {\n                    type_: 'rm',\n                    p1: buffer.rm\n                  };\n                }\n              }\n\n              for (var p in buffer) {\n                delete buffer[p];\n              }\n\n              return ret;\n            }\n          }\n        },\n        'pu-9,9': {\n          transitions: mhchemParser.createTransitions({\n            'empty': {\n              '0': {\n                action_: 'output-0'\n              },\n              'o': {\n                action_: 'output-o'\n              }\n            },\n            ',': {\n              '0': {\n                action_: ['output-0', 'comma'],\n                nextState: 'o'\n              }\n            },\n            '.': {\n              '0': {\n                action_: ['output-0', 'copy'],\n                nextState: 'o'\n              }\n            },\n            'else': {\n              '*': {\n                action_: 'text='\n              }\n            }\n          }),\n          actions: {\n            'comma': function comma() {\n              return {\n                type_: 'commaDecimal'\n              };\n            },\n            'output-0': function output0(buffer) {\n              /** @type {ParserOutput[]} */\n              var ret = [];\n              buffer.text_ = buffer.text_ || \"\";\n\n              if (buffer.text_.length > 4) {\n                var a = buffer.text_.length % 3;\n\n                if (a === 0) {\n                  a = 3;\n                }\n\n                for (var i = buffer.text_.length - 3; i > 0; i -= 3) {\n                  ret.push(buffer.text_.substr(i, 3));\n                  ret.push({\n                    type_: '1000 separator'\n                  });\n                }\n\n                ret.push(buffer.text_.substr(0, a));\n                ret.reverse();\n              } else {\n                ret.push(buffer.text_);\n              }\n\n              for (var p in buffer) {\n                delete buffer[p];\n              }\n\n              return ret;\n            },\n            'output-o': function outputO(buffer) {\n              /** @type {ParserOutput[]} */\n              var ret = [];\n              buffer.text_ = buffer.text_ || \"\";\n\n              if (buffer.text_.length > 4) {\n                var a = buffer.text_.length - 3;\n\n                for (var i = 0; i < a; i += 3) {\n                  ret.push(buffer.text_.substr(i, 3));\n                  ret.push({\n                    type_: '1000 separator'\n                  });\n                }\n\n                ret.push(buffer.text_.substr(i));\n              } else {\n                ret.push(buffer.text_);\n              }\n\n              for (var p in buffer) {\n                delete buffer[p];\n              }\n\n              return ret;\n            }\n          } //#endregion\n\n        }\n      }; //\n      // texify: Take MhchemParser output and convert it to TeX\n      //\n\n      /** @type {Texify} */\n\n      var texify = {\n        go: function go(input, isInner) {\n          // (recursive, max 4 levels)\n          if (!input) {\n            return \"\";\n          }\n\n          var res = \"\";\n          var cee = false;\n\n          for (var i = 0; i < input.length; i++) {\n            var inputi = input[i];\n\n            if (typeof inputi === \"string\") {\n              res += inputi;\n            } else {\n              res += texify._go2(inputi);\n\n              if (inputi.type_ === '1st-level escape') {\n                cee = true;\n              }\n            }\n          }\n\n          if (!isInner && !cee && res) {\n            res = \"{\" + res + \"}\";\n          }\n\n          return res;\n        },\n        _goInner: function _goInner(input) {\n          if (!input) {\n            return input;\n          }\n\n          return texify.go(input, true);\n        },\n        _go2: function _go2(buf) {\n          /** @type {undefined | string} */\n          var res;\n\n          switch (buf.type_) {\n            case 'chemfive':\n              res = \"\";\n              var b5 = {\n                a: texify._goInner(buf.a),\n                b: texify._goInner(buf.b),\n                p: texify._goInner(buf.p),\n                o: texify._goInner(buf.o),\n                q: texify._goInner(buf.q),\n                d: texify._goInner(buf.d)\n              }; //\n              // a\n              //\n\n              if (b5.a) {\n                if (b5.a.match(/^[+\\-]/)) {\n                  b5.a = \"{\" + b5.a + \"}\";\n                }\n\n                res += b5.a + \"\\\\,\";\n              } //\n              // b and p\n              //\n\n\n              if (b5.b || b5.p) {\n                res += \"{\\\\vphantom{X}}\";\n                res += \"^{\\\\hphantom{\" + (b5.b || \"\") + \"}}_{\\\\hphantom{\" + (b5.p || \"\") + \"}}\";\n                res += \"{\\\\vphantom{X}}\";\n                res += \"^{\\\\smash[t]{\\\\vphantom{2}}\\\\mathllap{\" + (b5.b || \"\") + \"}}\";\n                res += \"_{\\\\vphantom{2}\\\\mathllap{\\\\smash[t]{\" + (b5.p || \"\") + \"}}}\";\n              } //\n              // o\n              //\n\n\n              if (b5.o) {\n                if (b5.o.match(/^[+\\-]/)) {\n                  b5.o = \"{\" + b5.o + \"}\";\n                }\n\n                res += b5.o;\n              } //\n              // q and d\n              //\n\n\n              if (buf.dType === 'kv') {\n                if (b5.d || b5.q) {\n                  res += \"{\\\\vphantom{X}}\";\n                }\n\n                if (b5.d) {\n                  res += \"^{\" + b5.d + \"}\";\n                }\n\n                if (b5.q) {\n                  res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                }\n              } else if (buf.dType === 'oxidation') {\n                if (b5.d) {\n                  res += \"{\\\\vphantom{X}}\";\n                  res += \"^{\" + b5.d + \"}\";\n                }\n\n                if (b5.q) {\n                  res += \"{\\\\vphantom{X}}\";\n                  res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                }\n              } else {\n                if (b5.q) {\n                  res += \"{\\\\vphantom{X}}\";\n                  res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                }\n\n                if (b5.d) {\n                  res += \"{\\\\vphantom{X}}\";\n                  res += \"^{\" + b5.d + \"}\";\n                }\n              }\n\n              break;\n\n            case 'rm':\n              res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n              break;\n\n            case 'text':\n              if (buf.p1.match(/[\\^_]/)) {\n                buf.p1 = buf.p1.replace(\" \", \"~\").replace(\"-\", \"\\\\text{-}\");\n                res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n              } else {\n                res = \"\\\\text{\" + buf.p1 + \"}\";\n              }\n\n              break;\n\n            case 'roman numeral':\n              res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n              break;\n\n            case 'state of aggregation':\n              res = \"\\\\mskip2mu \" + texify._goInner(buf.p1);\n              break;\n\n            case 'state of aggregation subscript':\n              res = \"\\\\mskip1mu \" + texify._goInner(buf.p1);\n              break;\n\n            case 'bond':\n              res = texify._getBond(buf.kind_);\n\n              if (!res) {\n                throw [\"MhchemErrorBond\", \"mhchem Error. Unknown bond type (\" + buf.kind_ + \")\"];\n              }\n\n              break;\n\n            case 'frac':\n              var c = \"\\\\frac{\" + buf.p1 + \"}{\" + buf.p2 + \"}\";\n              res = \"\\\\mathchoice{\\\\textstyle\" + c + \"}{\" + c + \"}{\" + c + \"}{\" + c + \"}\";\n              break;\n\n            case 'pu-frac':\n              var d = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n              res = \"\\\\mathchoice{\\\\textstyle\" + d + \"}{\" + d + \"}{\" + d + \"}{\" + d + \"}\";\n              break;\n\n            case 'tex-math':\n              res = buf.p1 + \" \";\n              break;\n\n            case 'frac-ce':\n              res = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n              break;\n\n            case 'overset':\n              res = \"\\\\overset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n              break;\n\n            case 'underset':\n              res = \"\\\\underset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n              break;\n\n            case 'underbrace':\n              res = \"\\\\underbrace{\" + texify._goInner(buf.p1) + \"}_{\" + texify._goInner(buf.p2) + \"}\";\n              break;\n\n            case 'color':\n              res = \"{\\\\color{\" + buf.color1 + \"}{\" + texify._goInner(buf.color2) + \"}}\";\n              break;\n\n            case 'color0':\n              res = \"\\\\color{\" + buf.color + \"}\";\n              break;\n\n            case 'arrow':\n              var b6 = {\n                rd: texify._goInner(buf.rd),\n                rq: texify._goInner(buf.rq)\n              };\n\n              var arrow = \"\\\\x\" + texify._getArrow(buf.r);\n\n              if (b6.rq) {\n                arrow += \"[{\" + b6.rq + \"}]\";\n              }\n\n              if (b6.rd) {\n                arrow += \"{\" + b6.rd + \"}\";\n              } else {\n                arrow += \"{}\";\n              }\n\n              res = arrow;\n              break;\n\n            case 'operator':\n              res = texify._getOperator(buf.kind_);\n              break;\n\n            case '1st-level escape':\n              res = buf.p1 + \" \"; // &, \\\\\\\\, \\\\hlin\n\n              break;\n\n            case 'space':\n              res = \" \";\n              break;\n\n            case 'entitySkip':\n              res = \"~\";\n              break;\n\n            case 'pu-space-1':\n              res = \"~\";\n              break;\n\n            case 'pu-space-2':\n              res = \"\\\\mkern3mu \";\n              break;\n\n            case '1000 separator':\n              res = \"\\\\mkern2mu \";\n              break;\n\n            case 'commaDecimal':\n              res = \"{,}\";\n              break;\n\n            case 'comma enumeration L':\n              res = \"{\" + buf.p1 + \"}\\\\mkern6mu \";\n              break;\n\n            case 'comma enumeration M':\n              res = \"{\" + buf.p1 + \"}\\\\mkern3mu \";\n              break;\n\n            case 'comma enumeration S':\n              res = \"{\" + buf.p1 + \"}\\\\mkern1mu \";\n              break;\n\n            case 'hyphen':\n              res = \"\\\\text{-}\";\n              break;\n\n            case 'addition compound':\n              res = \"\\\\,{\\\\cdot}\\\\,\";\n              break;\n\n            case 'electron dot':\n              res = \"\\\\mkern1mu \\\\bullet\\\\mkern1mu \";\n              break;\n\n            case 'KV x':\n              res = \"{\\\\times}\";\n              break;\n\n            case 'prime':\n              res = \"\\\\prime \";\n              break;\n\n            case 'cdot':\n              res = \"\\\\cdot \";\n              break;\n\n            case 'tight cdot':\n              res = \"\\\\mkern1mu{\\\\cdot}\\\\mkern1mu \";\n              break;\n\n            case 'times':\n              res = \"\\\\times \";\n              break;\n\n            case 'circa':\n              res = \"{\\\\sim}\";\n              break;\n\n            case '^':\n              res = \"uparrow\";\n              break;\n\n            case 'v':\n              res = \"downarrow\";\n              break;\n\n            case 'ellipsis':\n              res = \"\\\\ldots \";\n              break;\n\n            case '/':\n              res = \"/\";\n              break;\n\n            case ' / ':\n              res = \"\\\\,/\\\\,\";\n              break;\n\n            default:\n              assertNever(buf);\n              throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n            // Missing texify rule or unknown MhchemParser output\n          }\n\n          assertString(res);\n          return res;\n        },\n        _getArrow: function _getArrow(a) {\n          switch (a) {\n            case \"->\":\n              return \"rightarrow\";\n\n            case \"\\u2192\":\n              return \"rightarrow\";\n\n            case \"\\u27F6\":\n              return \"rightarrow\";\n\n            case \"<-\":\n              return \"leftarrow\";\n\n            case \"<->\":\n              return \"leftrightarrow\";\n\n            case \"<-->\":\n              return \"rightleftarrows\";\n\n            case \"<=>\":\n              return \"rightleftharpoons\";\n\n            case \"\\u21CC\":\n              return \"rightleftharpoons\";\n\n            case \"<=>>\":\n              return \"rightequilibrium\";\n\n            case \"<<=>\":\n              return \"leftequilibrium\";\n\n            default:\n              assertNever(a);\n              throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n          }\n        },\n        _getBond: function _getBond(a) {\n          switch (a) {\n            case \"-\":\n              return \"{-}\";\n\n            case \"1\":\n              return \"{-}\";\n\n            case \"=\":\n              return \"{=}\";\n\n            case \"2\":\n              return \"{=}\";\n\n            case \"#\":\n              return \"{\\\\equiv}\";\n\n            case \"3\":\n              return \"{\\\\equiv}\";\n\n            case \"~\":\n              return \"{\\\\tripledash}\";\n\n            case \"~-\":\n              return \"{\\\\mathrlap{\\\\raisebox{-.1em}{$-$}}\\\\raisebox{.1em}{$\\\\tripledash$}}\";\n\n            case \"~=\":\n              return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}\";\n\n            case \"~--\":\n              return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}\";\n\n            case \"-~-\":\n              return \"{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$-$}}\\\\tripledash}\";\n\n            case \"...\":\n              return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n\n            case \"....\":\n              return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n\n            case \"->\":\n              return \"{\\\\rightarrow}\";\n\n            case \"<-\":\n              return \"{\\\\leftarrow}\";\n\n            case \"<\":\n              return \"{<}\";\n\n            case \">\":\n              return \"{>}\";\n\n            default:\n              assertNever(a);\n              throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n          }\n        },\n        _getOperator: function _getOperator(a) {\n          switch (a) {\n            case \"+\":\n              return \" {}+{} \";\n\n            case \"-\":\n              return \" {}-{} \";\n\n            case \"=\":\n              return \" {}={} \";\n\n            case \"<\":\n              return \" {}<{} \";\n\n            case \">\":\n              return \" {}>{} \";\n\n            case \"<<\":\n              return \" {}\\\\ll{} \";\n\n            case \">>\":\n              return \" {}\\\\gg{} \";\n\n            case \"\\\\pm\":\n              return \" {}\\\\pm{} \";\n\n            case \"\\\\approx\":\n              return \" {}\\\\approx{} \";\n\n            case \"$\\\\approx$\":\n              return \" {}\\\\approx{} \";\n\n            case \"v\":\n              return \" \\\\downarrow{} \";\n\n            case \"(v)\":\n              return \" \\\\downarrow{} \";\n\n            case \"^\":\n              return \" \\\\uparrow{} \";\n\n            case \"(^)\":\n              return \" \\\\uparrow{} \";\n\n            default:\n              assertNever(a);\n              throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n          }\n        }\n      }; //\n      // Helpers for code anaylsis\n      // Will show type error at calling position\n      //\n\n      /** @param {number} a */\n\n      function assertNever(a) {}\n      /** @param {string} a */\n\n\n      function assertString(a) {}\n      /***/\n\n    }\n    /******/\n    ])[\"default\"]\n  );\n});","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React, { Component } from \"react\"\nimport katex from \"katex\"\n\nrequire('katex/dist/contrib/mhchem.js');\n\nclass Chem extends Component {\n  render() {\n    const { chem, block } = this.props\n    const s = katex.renderToString(chem, {\n      throwOnError: false, displayMode: block\n    })\n\n    return (\n      <span dangerouslySetInnerHTML={{ __html: s }}></span>\n    )\n  }\n}\n\nexport default Chem","/**\n * The template for a section within a chapter.\n * \n * Book > Chapters > Sections\n */\n\nimport React, { Component } from \"react\"\nimport Layout from \"../components/layout\"\nimport Chem from \"../components/formula\"\nimport { Link, graphql } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport \"../styles/classes.scss\"\n\nrequire('katex/dist/contrib/mhchem.js');\nrequire(`katex/dist/katex.min.css`)\n\nclass Section extends Component {\n  render() {\n    const shortcodes = { Chem, Link }\n\n    return (\n      <Layout>\n        <script src=\"https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/mhchem.min.js\" integrity=\"sha384-5gCAXJ0ZgozlShOzzT0OWArn7yCPGWVIvgo+BAd8NUKbCmulrJiQuCVR9cHlPHeG\"></script>\n        <h1>{ this.props.data.mdx.frontmatter.title }</h1>\n        <MDXProvider components={ shortcodes }>\n          <MDXRenderer>\n            { this.props.data.mdx.body }\n          </MDXRenderer>\n        </MDXProvider>\n      </Layout>\n    )\n  }\n}\n\nexport default Section\n\nexport const query = graphql`\nquery($slug: String!) {\n  mdx(slug: { eq: $slug }) {\n    slug\n    body\n    frontmatter {\n      title\n      slug\n    }\n  }\n}\n`\n","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","'use strict';\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar $native = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n    // convert -0 to +0\n    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;\n    var O = toIObject(this);\n    var length = toLength(O.length);\n    var index = length - 1;\n    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));\n    if (index < 0) index = length + index;\n    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;\n    return -1;\n  }\n});\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}